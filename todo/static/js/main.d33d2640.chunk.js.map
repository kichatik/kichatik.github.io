{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","liked","allPosts","React","createElement","className","SearchPanel","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","term","onUpdateSearch","bind","_assertThisInitialized","_inherits","_createClass","key","value","e","target","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","_this2","map","_this2$props","filter","onFilterSelect","clazz","concat","onClick","PostListItem","important","like","onDelete","onToggleImportant","onToggleLiked","onToggleDone","classNames","done","PostList","posts","elements","item","id","Object","assign","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","index","findIndex","elem","_toConsumableArray","slice","body","newItem","_ref2","_ref3","old","_objectSpread","_ref4","_ref5","_this$state","length","visiblePosts","filterPost","searchPost","items","indexOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d33d2640.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './app-header.css'\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Sisesta oma nimi siia</h1>\r\n            <h2>{allPosts} plaadid, meeldisid {liked}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\n\r\nimport './search-panel.css'\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n    onUpdateSearch(e){\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Otsi kirjete järgi\"\r\n                value={this.state.term}\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n}","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;","import React, {Component} from 'react';\r\n\r\nimport './post-status-filter.css';\r\n\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'Kõik'},\r\n            {name: 'like', label: 'Mulle meeldis'}\r\n        ];\r\n    }\r\n    render() {\r\n\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const {filter, onFilterSelect} = this.props;\r\n            const active = filter === name;\r\n            const clazz = active ? 'btn-info': 'btn-outline-secondary' \r\n            return (\r\n                <button type='button'\r\n                    className={`btn ${clazz}`}\r\n                    key={name}\r\n                    onClick={() => onFilterSelect(name)}> \r\n                    {label}</button>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}","import PostListItem from './post-list-item';\r\nexport default PostListItem;","import React from 'react';\r\nimport './post-list-item.css'; // Oletame, et see on teie stiilifail\r\n\r\nconst PostListItem = ({ label, important, like, onDelete, onToggleImportant, onToggleLiked, onToggleDone, done }) => {\r\n    let classNames = 'app-list-item';\r\n    if (important) {\r\n        classNames += ' important';\r\n    }\r\n    if (like) {\r\n        classNames += ' like';\r\n    }\r\n    if (done) {\r\n        classNames += ' done'; // Lisab \"done\" klassi, kui postitus on tehtud\r\n    }\r\n\r\n    return (\r\n        <span className={classNames}>\r\n            <span\r\n                onClick={onToggleDone} // Klõpsamisel vahetab \"tehtud\" staatust\r\n                className=\"post-done-icon\" // Lisage vajalik stiil\r\n            >\r\n                <i className=\"fa fa-check\" /> {/* \"Tehtud\" ikoon */}\r\n            </span>\r\n            <span className=\"app-list-item-label\">{label}</span>\r\n            <button type=\"button\" className=\"btn btn-outline-danger\" onClick={onDelete}>\r\n                &times;\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-outline-success\" onClick={onToggleImportant}>\r\n                ★\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-outline-primary\" onClick={onToggleLiked}>\r\n                ♥\r\n            </button>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default PostListItem;\r\n","import PostList from './post-list';\r\nexport default PostList;","import React from 'react';\r\nimport PostListItem from '../post-list-item'; // Oletame, et teil on see komponent\r\n\r\nconst PostList = ({ posts, onDelete, onToggleImportant, onToggleLiked, onToggleDone }) => {\r\n    const elements = posts.map(item => {\r\n        return (\r\n            <li key={item.id}>\r\n                <PostListItem\r\n                    {...item}\r\n                    onDelete={() => onDelete(item.id)}\r\n                    onToggleImportant={() => onToggleImportant(item.id)}\r\n                    onToggleLiked={() => onToggleLiked(item.id)}\r\n                    onToggleDone={() => onToggleDone(item.id)} // Uus funktsioon\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return <ul className=\"app-list list-group\">{elements}</ul>;\r\n};\r\n\r\nexport default PostList;\r\n","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;","import React, { Component } from 'react';\r\nimport './post-add-form.css'; // Impordib seotud CSS faili\r\n\r\nexport default class PostAddForm extends Component { \r\n    constructor(props) {\r\n        super(props);\r\n        // Algne olek, kus hoitakse sisestatud teksti\r\n        this.state = {\r\n            text: ''\r\n        };\r\n        // Funktsioonide sidumine\r\n        this.onValueChange = this.onValueChange.bind(this); \r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    // Funktsioon, mis uuendab olekut, kui väärtus muutub\r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value // Uuendab sisestatud teksti\r\n        });\r\n    }\r\n\r\n    // Funktsioon, mis käivitub vormi esitamisel\r\n    onSubmit(e) {\r\n        e.preventDefault(); // Tühistab vormi vaikimisi saatmise\r\n        this.props.onAdd(this.state.text); // Kutsub vanema komponendi funktsiooni, et lisada uus postitus\r\n        this.setState({\r\n            text: '' // Tühjendab sisestusala pärast saatmist\r\n        });\r\n    }\r\n\r\n    // Renderdamise funktsioon\r\n    render() { \r\n        return (\r\n            <form\r\n                className=\"bottom-panel d-flex\" // CSS klassid\r\n                onSubmit={this.onSubmit}>  \r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Millest sa praegu mõtled?\" // Sisendi näidis\r\n                    className=\"form-control new-post-label\" // CSS klass\r\n                    onChange={this.onValueChange} // Muudatuse korral kutsub onValueChange funktsiooni\r\n                    value={this.state.text} // Seondab olekuga\r\n                />\r\n                <button\r\n                    type=\"submit\" // Nupp, mis saadab vormi\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Lisa\r\n                </button>\r\n            </form>\r\n        );\r\n    } \r\n}\r\n","import App from './app'\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n        this.state = {\r\n            data: [\r\n                { label: 'Going to learn React', important: true, like: false, done: false, id: 1 }, \r\n                { label: 'That is so good', important: false, like: false, done: false, id: 2 }, \r\n                { label: 'I need a break...', important: false, like: false, done: false, id: 3 }\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onToggleDone = this.onToggleDone.bind(this); // Siduge onToggleDone\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n        this.maxId = 4;\r\n    }\r\n    deleteItem(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem(body) {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++\r\n        }\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem]; \r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleImportant(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n            \r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]; \r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleLiked(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            \r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]; \r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleDone(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const old = data[index];\r\n            const newItem = { ...old, done: !old.done }; // Muuda 'done' omadust\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n            return { data: newArr };\r\n        });\r\n    }\r\n    \r\n\r\n    render() {\r\n        const { data, term, filter } = this.state;\r\n    \r\n        // Arvuta liked ja allPosts\r\n        const liked = data.filter((item) => item.like).length; \r\n        const allPosts = data.length;\r\n    \r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n        \r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader liked={liked} allPosts={allPosts} />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel onUpdateSearch={this.onUpdateSearch} />\r\n                    <PostStatusFilter filter={filter} onFilterSelect={this.onFilterSelect} />\r\n                </div>\r\n                <PostList\r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}\r\n                    onToggleDone={this.onToggleDone} // Siin edastate funktsiooni\r\n                />\r\n                <PostAddForm onAdd={this.addItem} />\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    searchPost(items, term) {\r\n        if (term.length === 0) { \r\n            return items\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1\r\n        });\r\n    }\r\n\r\n    filterPost (items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like)\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({term})\r\n    }\r\n\r\n    onFilterSelect(filter){\r\n        this.setState({filter})\r\n    }\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './components/app/';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}